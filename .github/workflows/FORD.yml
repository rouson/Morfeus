name: FORD

on:
  push:
    paths:
      - '.github/workflows/FORD.yml'
      - '**/*.f90'
      - '**/*.F90'
      - '**/*.md'
  pull_request:
    types: [opened, synchronize]

env:
  LANG: "en_US.UTF-8"
  LC_ALL: "en_US.UTF-8"
  NCPU: "2"
  HOMEBREW_DISPLAY_INSTALL_TIMES: "ON" # Benchmark Homebrew install times
  HOMEBREW_NO_ANALYTICS: "ON" # These speed up homebrew installs
  HOMEBREW_NO_AUTO_UPDATE: "ON"
  HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK: "ON"
  HOMEBREW_NO_GITHUB_API: "ON"
  HOMEBREW_NO_INSTALL_CLEANUP: "ON"
  PIP_DISABLE_PIP_VERSION_CHECK: "ON" # These speed up installs from pip
  PIP_NO_CLEAN: "ON"
  PIP_PREFER_BINARY: "ON"
  TZ: "UTC"
  GCC_V: 8

jobs:
  Build-API-Docs:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: false

      - name: set outputs
        id: so
        run: |
          echo "::set-output name=homedir::${HOME}"
          mkdir -p ${BUILD_DIR} ${PIP_CACHE_DIR} ${PYTHONUSERBASE}/bin || true
          if brew --cache ; then
            rm -rf $(brew --cache)
            echo "::set-output name=homebrew_cache::$(brew --cache)"
          fi
          echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
          echo "::set-output name=branch::$(git branch --show-current)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.so.outputs.homebrew_cache }}
          key: ${{ runner.os }}-brew-ford-cache

      - name: Install packages
        run: |
          brew install -f --force-bottle --keep-tmp libxml2 ford
          pip3 install --prefer-binary --no-clean --disable-pip-version-check --prefer-binary --progress-bar off lxml
          type -a ford
          ford --version

      - name: Build documentation
        id: build-documentation
        run: |
          mkdir -p $(brew --cache) || true
          ford -r $(git describe --always) --debug API-doc-FORD-file.md
          touch API-doc/.nojekyll
          echo "::set-output name=ford_doc_dir::$(pwd)/API-doc"

      - name: Upload Documentation
        uses: actions/upload-artifact@v1
        with:
          name: FORD-API-docs
          path: ${{ steps.build-documentation.outputs.ford_doc_dir }}

      - name: Check Links
        uses: peter-evans/link-checker@v1
        id: lc
        with:
          args: -v -r *
      - name: Create Issue From File
        uses: peter-evans/create-issue-from-file@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title:  Link check ${{ steps.so.outputs.branch }} @ ${{ stetps.so.outputs.short_sha }} by ${{github.actor}}
          content-filepath: ./link-checker/out.md
          labels: report, automated issue, documentation
      - name: Fail on broken links
        run: exit ${{ steps.lc.outputs.exit_code }}

      - name: Deploy API Docs
        uses: docker://peaceiris/gh-pages:v2
        env:
          ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: ${{ steps.build-documentation.outputs.ford_doc_dir }}
        with:
          emptyCommits: false
          forceOrphan: true
          commitMessage: ${{ github.event.head_commit.message }}
          username: ${{ github.actor }}
        if: success() && github.event_name == 'push' # && github.ref == 'refs/head/fd-dev'
